n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A-data-stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout-stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
model_version3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg04  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr26  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr37  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg18  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000003,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ( NOT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000001)
)) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A-data-stat1[0x0000000B] @ (A-data-stat1[0x0000000A] @ (A-data-stat1[0x00000009] @ A-data-stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A-data-stat1[0x0000003F] @ (A-data-stat1[0x0000003E] @ (A-data-stat1[0x0000003D] @ (A-data-stat1[0x0000003C] @ (A-data-stat1[0x0000003B] @ (A-data-stat1[0x0000003A] @ (A-data-stat1[0x00000039] @ A-data-stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout-stat2[0x0000000B] @ (stdout-stat2[0x0000000A] @ (stdout-stat2[0x00000009] @ stdout-stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout-stat2[0x0000003F] @ (stdout-stat2[0x0000003E] @ (stdout-stat2[0x0000003D] @ (stdout-stat2[0x0000003C] @ (stdout-stat2[0x0000003B] @ (stdout-stat2[0x0000003A] @ (stdout-stat2[0x00000039] @ stdout-stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ((((0x01 = model_version3[0x00000000]
) AND (0x00 = model_version3[0x00000001]
)
) AND (0x00 = model_version3[0x00000002]
)
) AND (0x00 = model_version3[0x00000003]
)
) );
ASSERT( (0x2D = arg04[0x00000000]
) );
ASSERT( ( NOT( (0x00 = arg04[0x00000001]
))) );
ASSERT( ( NOT( (0x2D = arg04[0x00000001]
))) );
ASSERT( (LET let_k_0 = BVSX(arg04[0x00000001],32)
,
let_k_1 = let_k_0[7:0] IN 
(0x0000005A = IF((0b1 = let_k_0[7:7]
))
THEN (0xFFFFFF @ let_k_1
)
ELSE (0x000000 @ let_k_1
)
ENDIF
))  );
ASSERT( ( NOT( (0x00 = arg04[0x00000002]
))) );
ASSERT( ( NOT( (0x00 = arg04[0x00000003]
))) );
ASSERT( ( NOT( (0x00 = arg04[0x00000004]
))) );
ASSERT( ( NOT( (0x00 = arg04[0x00000005]
))) );
ASSERT( ( NOT( (0x00 = arg04[0x00000006]
))) );
ASSERT( ( NOT( (0x00 = arg04[0x00000007]
))) );
ASSERT( ( NOT( (0x00 = arg04[0x00000008]
))) );
ASSERT( (0x00 = arg04[0x00000009]
) );
%----------------------------------------------------
QUERY( FALSE  );
