A-data-stat0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
model_version1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A-data2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A-data-stat0[0x0000000B] @ (A-data-stat0[0x0000000A] @ (A-data-stat0[0x00000009] @ A-data-stat0[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A-data-stat0[0x0000003F] @ (A-data-stat0[0x0000003E] @ (A-data-stat0[0x0000003D] @ (A-data-stat0[0x0000003C] @ (A-data-stat0[0x0000003B] @ (A-data-stat0[0x0000003A] @ (A-data-stat0[0x00000039] @ A-data-stat0[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ((((0x01 = model_version1[0x00000000]
) AND (0x00 = model_version1[0x00000001]
)
) AND (0x00 = model_version1[0x00000002]
)
) AND (0x00 = model_version1[0x00000003]
)
) );
ASSERT( (0x2 = A-data-stat0[0x00000019][7:4]
) );
ASSERT( (0b00000000000000000100000010 = (A-data2[0x00000017] @ (A-data2[0x00000016] @ (A-data2[0x00000015] @ A-data2[0x00000014]
)
)
)[25:0]
) );
ASSERT( ((((0x4D = A-data2[0x00000000]
) AND (0x3C = A-data2[0x00000001]
)
) AND (0xB2 = A-data2[0x00000002]
)
) AND (0xA1 = A-data2[0x00000003]
)
) );
ASSERT( ((0x1F = A-data2[0x00000004]
) AND (0x02 = A-data2[0x00000005]
)
) );
ASSERT( (LET let_k_0 = (A-data2[0x00000013] @ (A-data2[0x00000012] @ (A-data2[0x00000011] @ A-data2[0x00000010]
)
)
) IN 
( NOT( BVGT(0x0000000040000000,IF(SBVGT(0x00000001,let_k_0)
)
THEN 0x0000000000040000
ELSE BVSX(let_k_0,64)

ENDIF)
)))  );
%----------------------------------------------------
QUERY( FALSE  );
