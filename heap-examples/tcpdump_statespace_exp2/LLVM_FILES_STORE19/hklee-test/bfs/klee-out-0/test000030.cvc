A-data-stat0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
model_version1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A-data2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr24  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr35  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr46  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr57  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr68  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr79  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr810  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr911  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1012  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1113  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1214  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1315  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1416  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1517  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1618  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1719  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1820  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1921  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2022  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2123  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2224  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2325  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2426  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2527  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2628  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2729  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2830  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2931  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3032  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3133  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3234  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3335  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3436  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3537  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3638  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3739  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3840  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3941  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4042  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4143  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4244  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4345  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4446  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4547  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4648  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4749  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4850  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4951  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5052  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5153  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5254  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5355  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5456  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5557  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5658  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5759  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5860  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5961  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6062  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6163  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6264  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6365  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6466  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6567  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6668  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6769  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6870  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6971  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7072  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7173  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7274  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7375  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7476  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7577  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7678  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7779  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7880  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7981  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8082  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8183  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8284  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8385  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8486  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8587  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8688  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8789  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8890  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8991  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9092  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9193  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9294  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9395  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9496  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9597  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9698  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9799  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr98100  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr99101  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr100102  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr101103  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr102104  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A-data-stat0[0x0000000B] @ (A-data-stat0[0x0000000A] @ (A-data-stat0[0x00000009] @ A-data-stat0[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A-data-stat0[0x0000003F] @ (A-data-stat0[0x0000003E] @ (A-data-stat0[0x0000003D] @ (A-data-stat0[0x0000003C] @ (A-data-stat0[0x0000003B] @ (A-data-stat0[0x0000003A] @ (A-data-stat0[0x00000039] @ A-data-stat0[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ((((0x01 = model_version1[0x00000000]
) AND (0x00 = model_version1[0x00000001]
)
) AND (0x00 = model_version1[0x00000002]
)
) AND (0x00 = model_version1[0x00000003]
)
) );
ASSERT( (0x2 = A-data-stat0[0x00000019][7:4]
) );
ASSERT( ( NOT( ((((0xD4 = A-data2[0x00000000]
) AND (0xC3 = A-data2[0x00000001]
)
) AND (0xB2 = A-data2[0x00000002]
)
) AND (0xA1 = A-data2[0x00000003]
)
))) );
ASSERT( ( NOT( ((((0x4D = A-data2[0x00000000]
) AND (0x3C = A-data2[0x00000001]
)
) AND (0xB2 = A-data2[0x00000002]
)
) AND (0xA1 = A-data2[0x00000003]
)
))) );
ASSERT( ( NOT( ((((0x34 = A-data2[0x00000000]
) AND (0xCD = A-data2[0x00000001]
)
) AND (0xB2 = A-data2[0x00000002]
)
) AND (0xA1 = A-data2[0x00000003]
)
))) );
ASSERT( (LET let_k_0 = ((0xA1 = A-data2[0x00000000]
) AND (0xB2 = A-data2[0x00000001]
)
),
let_k_1 = A-data2[0x00000002],
let_k_2 = A-data2[0x00000003] IN 
(((let_k_0 AND (0x3C = let_k_1
)
) AND (0x4D = let_k_2
)
) OR (((let_k_0 AND (0xCD = let_k_1
)
) AND (0x34 = let_k_2
)
) OR ((let_k_0 AND (0xC3 = let_k_1
)
) AND (0xD4 = let_k_2
)
)
)
))  );
ASSERT( (0b00000000000000000100000010 = ((((0x00 @ (A-data2[0x00000015] @ 0x0000
)
) | (A-data2[0x00000014] @ 0x000000
)
) | (0x0000 @ (A-data2[0x00000016] @ 0x00
)
)
) | (0x000000 @ A-data2[0x00000017]
)
)[25:0]
) );
ASSERT( (0xA1B23C4D = (((A-data2[0x00000000] @ 0x000000
) | (0x00 @ (A-data2[0x00000001] @ 0x0000
)
)
) | ((0x0000 @ (A-data2[0x00000002] @ 0x00
)
) | (0x000000 @ A-data2[0x00000003]
)
)
)
) );
ASSERT( (0x021F = ((0x00 @ A-data2[0x00000005]
) | (A-data2[0x00000004] @ 0x00
)
)
) );
ASSERT( (LET let_k_0 = ((((0x00 @ (A-data2[0x00000011] @ 0x0000
)
) | (A-data2[0x00000010] @ 0x000000
)
) | (0x0000 @ (A-data2[0x00000012] @ 0x00
)
)
) | (0x000000 @ A-data2[0x00000013]
)
) IN 
BVGT(0x0000000040000000,IF(SBVGT(0x00000001,let_k_0)
)
THEN 0x0000000000040000
ELSE BVSX(let_k_0,64)

ENDIF)
)  );
ASSERT( ( NOT( (0x00000000 = ((((0x00 @ (A-data2[0x00000011] @ 0x0000
)
) | (A-data2[0x00000010] @ 0x000000
)
) | (0x0000 @ (A-data2[0x00000012] @ 0x00
)
)
) | (0x000000 @ A-data2[0x00000013]
)
)
))) );
ASSERT( (LET let_k_0 = ((((0x00 @ (A-data2[0x00000011] @ 0x0000
)
) | (A-data2[0x00000010] @ 0x000000
)
) | (0x0000 @ (A-data2[0x00000012] @ 0x00
)
)
) | (0x000000 @ A-data2[0x00000013]
)
) IN 
BVGT(((((0x00 @ (A-data2[0x00000025] @ 0x0000
)
) | (A-data2[0x00000024] @ 0x000000
)
) | (0x0000 @ (A-data2[0x00000026] @ 0x00
)
)
) | (0x000000 @ A-data2[0x00000027]
)
),IF(SBVGT(0x00000001,let_k_0)
)
THEN 0x00040000
ELSE let_k_0
ENDIF)
)  );
ASSERT( BVGT(((((0x00 @ (A-data2[0x00000025] @ 0x0000
)
) | (A-data2[0x00000024] @ 0x000000
)
) | (0x0000 @ (A-data2[0x00000026] @ 0x00
)
)
) | (0x000000 @ A-data2[0x00000027]
)
),0x00040000)
 );
%----------------------------------------------------
QUERY( FALSE  );
